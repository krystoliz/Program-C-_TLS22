PERCOBAAN 1 : ARRAY STATIS SATU DIMENSI
Berikut ini adalah sebuah program dalam bahasa C++. Salinlah program berikut menggunakan text
editor dan simpan dengan nama larik.cpp. Kemudian compile dan run (eksekusi) program tersebut.

#include <iostream>
using namespace std;
int main()
{
int larik[5] = {10, 20, 30, 40, 50};
int i;
cout<<"Elemen larik\t\t"<<"Nilai elemen larik\n";
for(i=0; i<5; i++)
{
cout<<"larik["<<i<<"]\t\t\t"<<larik[i]<<"\n";
}
return 0;
}

----------------------------------------------------------------------
1. Apakah keluaran dari program di atas tersebut? Jelaskan ?

Elemen larik    Nilai Elemen Larik
larik[0]      10
larik[1]      20
larik[2]      30
larik[3]      40
larik[4]      50
----------------------------------------------------------------------

Perhatikan program di bawah ini, kemudian salin (ketik ulang, jangan copy-paste), compile, dan
eksekusi program tersebut.

#include <iostream>
using namespace std;
int main () {
int A[5], i, j; // deklarasi array A bertipe integer dan memiliki ukuran 5
(memiliki 5 elemen)
// initialisasi indeks dari array A dari indeks 0 nilai array dan indeks
selanjutnya bertambahan dengan 1
for ( int i = 0; i < 5; i++ ) {
// mengeset elemen dari array A[0] bernilai 100 dan nilai array
selanjutnya bertambahan dengan 1
A[i] = i + 100;
}
cout << "Indeks\t\t"<< "Nilai Elemen\t" << "Alamat"<<endl;
// menampilkan indeks dan nilai dari tiap elemen array A serta lokasi
alamat memorinya
for ( int j = 0; j < 5; j++ ) {
cout << j <<"\t\t\t"<<A[ j ]<<"\t\t\t\t"<<&A[j] << endl;
}
}

-------------------------------------------------------------------------------------------
1. Berapa indeks array A yang paling besar ? 104
2. Berapa ukuran tipe data dari elemen array A ? 20
3. Berapa bertambahan ukuran memori yang menyimpan tiap nilai elemen dari array A ? 4
--------------------------------------------------------------------------------------------
Practice 4
#include <iostream>
using namespace std;
typedef struct Person
{
string name;
int NIM;
int age;
}Student;

int main()
{
int i,n;
cout<< "Masukkan jumlah data mahasiswa :";
cin>> n;
cout<<endl;
Student s_array[n];
cout<<"Masukkan Data Mahasiswa \n";
for(i=0;i<n;i++){
cout<< "Masukkan Nama mahasiswa :\n";

cin>>s_array[i].name;
cout<< "Masukkan NIM mahasiswa :\n";
cin>>s_array[i].NIM;
cout<< "Masukkan Umur mahasiswa :\n";
cin>>s_array[i].age;
}
cout<<"\nDaftar Mahasiswa\n";
cout<<"\nNo.\t\tNama\t\tNIM\t\tUmur\n";
for(i=0;i<n;i++){
cout<<i+1<<"\t\t"<<s_array[i].name <<"\t\t\t"<<s_array[i].NIM

<<"\t\t"<<s_array[i].age <<endl;
}
}

---------------------------------------------------------------------------------------------------
1. Apakah keluaran dari program di atas ?
Masukkan jumlah data mahasiswa :1
Masukkan Data Mahasiswa:
Masukkan Nama mahasiswa :
Jhon
Masukkan NIM mahasiswa  :
123
Masukkan Umur mahasiswa :
19

Daftar Mahasiswa

No.   Name    NIM   Umur  
1     Jhon    123   19

2. Apakah ada kesalahan ? jika ada silahkan diperbaiki sapai menghasilkan keluaran yang sesuai
seharusnya 
cout<<i+1<<"\t\t"<<s_array[i].name <<"\t\t\t"<<s_array[i].NIM <<"\t\t"<<s_array[i].age <<endl;
menjadi
cout<<i+1<<"\t\t"<<s_array[i].name <<"\t\t"<<s_array[i].NIM <<"\t\t"<<s_array[i].age <<endl;
---------------------------------------------------------------------------------------------------
Practice 4
Pada percobaan ini, salinlah program berikut menggunakan text editor dan simpan dengan nama
tertentu. Kemudian compile dan eksekusi program tersebut.
#include <iostream>
using namespace std;
int main () {
int A[5][5], i, j, k,l; // deklarasi array A bertipe integer dan
memiliki ukuran baris 5 dan kolom 5
// inisialisasi indeks dari array Adimulai dari indeks [0][0]
for ( int i = 0; i < 5; i++ )

{
for ( int j = 0; j < 5; j++ )

// set nilai elemen dimulai dari array A[0]0], baris ke 0
akan diset ke nilai 100 selanjutnya kenaikan baris akan bertambah 1
A[i][j] = i+100;

}

cout << "Indeks\t\t"<< "Nilai Elemen\t" << "Alamat"<<endl;
// menampilkan indeks dan nilai dari tiap elemen array A serta lokasi
alamat memorinya
for ( int k = 0; k < 5; k++ )
{
for ( int l = 0; l < 5; l++ )
cout << "["<<k<<"]"<<"["<<l<<"]"<<"\t\t"<<A[k][l]<<"\t\t\t\t"<<&A[k][l]
<< endl;
}
}

1. Apakah keluaran dari program di atas ?
Indeks        Nilai Elemen    Alamat
[0][0]        100             0x7ffcc02fa870
.
.
.
[4][4]        104             0x7ffcc02fa8d0
2. Mengapa diperlukan dua buah perintah “for” untuk iterasinya ?
for diperlukan untuk iterasi agar jumlah iterasi yang dilakukan sesuai dengan yang kita inginkan dan jumlahnya sudah ditentukan
3. Modifikasi program di atas dengan mengganti perintah iterasi “for” dengan perintah “while”
#include <iostream>
using namespace std;
int main () {
int A[5][5], i, j, k,l; // deklarasi array A bertipe integer dan memiliki ukuran baris 5 dan kolom 5
// inisialisasi indeks dari array Adimulai dari indeks [0][0]
i,j,k,l = 0;
while(i<5){
    j=0;
    while (j<5){
        A[i][j]=100+i;
        j++;
    }
    i++;
    
}

cout << "Indeks\t\t"<< "Nilai Elemen\t" << "Alamat"<<endl;
// menampilkan indeks dan nilai dari tiap elemen array A serta lokasi alamat memorinya

while(k<5){
    l=0;
    while(l<5){
     cout << "["<<k<<"]"<<"["<<l<<"]"<<"\t\t"<<A[k][l]<<"\t\t\t\t"<<&A[k][l] << endl;   
     l++;
    }
    k++;
    
}


}
4. Modifikasi program di atas dengan mengganti perintah iterasi “for” dengan perintah “ do while”
#include <iostream>
using namespace std;
int main () {
int A[5][5], i, j, k,l; // deklarasi array A bertipe integer dan memiliki ukuran baris 5 dan kolom 5
// inisialisasi indeks dari array Adimulai dari indeks [0][0]
i,j,k,l = 0;


do{
    j=0;
    do{
        A[i][j]=100+i;
        j++;
    }while(j<5);
    i++;
}while(i<5);

cout << "Indeks\t\t"<< "Nilai Elemen\t" << "Alamat"<<endl;
// menampilkan indeks dan nilai dari tiap elemen array A serta lokasi alamat memorinya



do{
    l=0;
    do{
        cout << "["<<k<<"]"<<"["<<l<<"]"<<"\t\t"<<A[k][l]<<"\t\t"<<&A[k][l] << endl;   
     l++;
    }while(l<5);
    k++;
}while(k<5);

}

---------------------------------------------------------------------------------------------------
Practice 5
Salin program di bawah ini, compile, dan eksekusi !
#include<iostream>
using namespace std;
int main( )
{
int s[3][3];
int i, j;
cout<<"\nMasukkan sks Mahasiswa untuk 3 Angkatan yang berbeda \n";
for(i=0;i<3;i++)


{
cout<<"\n Angkatan 202"<<i<<"\t";
for(j=0;j<3;j++)
{
cout<<"\nsks Mahasiswa ["<<i<<"]["<<j<<"]= ";
cin>>s[i][j];
}
}
cout<<endl;
cout<<"\nTampilkan data sks Mahasiswa 3 Angkatan\n";
cout<<"\n Angkatan\t\t"<<"sks";
for(i=0;i<3;i++)
{
cout<<"\n 202"<<i<<"\t";
for(j=0;j<3;j++)
{
cout<<"\t"<<s[i][j];
}
cout<<endl;
}
}
---------------------------------------------------------------------------------------------------
1. Apakah keluaran dari program di atas ? Jelaskan
Keluaran dari program adalah menunjukkan sks dari 3 mahasiswa angkatan 2020, 2021, dan 2022.
Angkatan        sks
2020        21  23  20
2021        23  24  21
2022        20  19  24

2. Modifikasi program di atas sehingga dapat mengeluarkan data sks mahasiswa untuk 6 angkatan
dimulai dari angkatan 1990 dan tiap angkatan ada 4 data sks mahasiswa.

#include<iostream>
using namespace std;
int main( )
{
int s[6][4];
int i, j;
cout<<"\nMasukkan sks Mahasiswa untuk 3 Angkatan yang berbeda \n";
for(i=0;i<6;i++)

{
cout<<"\n Angkatan 199"<<i<<"\t";
for(j=0;j<4;j++)
{
cout<<"\nsks Mahasiswa ["<<i<<"]["<<j<<"]= ";
cin>>s[i][j];
}
}
cout<<endl;
cout<<"\nTampilkan data sks Mahasiswa 3 Angkatan\n";
cout<<"\n Angkatan\t\t"<<"sks";
for(i=0;i<6;i++)
{
cout<<"\n 202"<<i<<"\t";
for(j=0;j<4;j++)
{
cout<<"\t"<<s[i][j];
}
cout<<endl;
}
}

3. Gantilah perintah “for” dengan “while” untuk perintah pada poin kedua
#include<iostream>
using namespace std;
int main( )
{
int s[6][4];
int i, j;
cout<<"\nMasukkan sks Mahasiswa untuk 3 Angkatan yang berbeda \n";

while(i<6){
    cout << "\nAngkatan 199"<<i<<"\t";
    j=0;
    while(j<4){
        cout<<"\nsks Mahasiswa ["<<i<<"]["<<j<<"]= ";
        cin>>s[i][j]; 
        j++;
    }
    i++;
}
cout<<endl;
cout<<"\nTampilkan data sks Mahasiswa 3 Angkatan\n";
cout<<"\n Angkatan\t\t"<<"sks";

i=0;
j=0;
while (i<6){
    cout<<"\n 199"<<i<<"\t";
    j=0;
    while (j<4){
        cout<<"\t"<<s[i][j];
        j++;
    }
  i++;  
}
}

-------------------------------------------------------------------------------------------------
Praktek 6

Program di bawah ini adalah program structure yang memanfaatkan pointer. Salin, compile, dan
eksekusi program di berikut ini.
#include <iostream>
using namespace std;
struct rectangular {
int length;
int width;
};
int main() {
rectangular *ptr, r;
int area;
ptr = &r;
cout << "Enter length: "<<endl;
cin >> (*ptr).length;
cout << "Enter width"<<endl;
cin >> (*ptr).width;
area = (*ptr).length * (*ptr).width;
cout << "Displaying information Rectangular" << endl;
cout << "Length = " << (*ptr).length <<" \tWidth " << (*ptr).width
<<endl;
cout << "Area = " << area<<endl;

return 0;
}

1. Apakah keluaran dari program di atas ?
Enter length :
2
Enter width :
2
Displaying information Rectangular
Length = 2  Width = 2
Area = 4

2. Apa beda antara structure dinamis dan statis ?
Struct Statis:

Deklarasi struct statis dilakukan pada saat kompilasi dan memerlukan alokasi memori tetap yang ditentukan saat kompilasi.
Ukuran dari struct statis tetap selama program berjalan.
Setiap objek struct statis harus diinisialisasi saat deklarasi.
Objek struct statis dapat disimpan di dalam stack atau di dalam data segment.
Struct statis tidak bisa diubah ukurannya pada saat runtime.
Struct Dinamis:

Deklarasi struct dinamis dilakukan pada saat runtime dengan menggunakan operator new atau malloc untuk mengalokasikan memori.
Ukuran dari struct dinamis dapat berubah pada saat runtime dengan mengalokasikan atau membebaskan memori yang digunakan.
Inisialisasi struct dinamis dapat dilakukan setelah alokasi memori.
Objek struct dinamis disimpan di dalam heap.
Struct dinamis lebih fleksibel dan dapat diubah ukurannya selama program berjalan

------------------------------------------------------------------------------
Program di bawah ini adalah program array dinamis yang memanfaatkan pointer. Salin, compile,
dan eksekusi program di berikut ini.
#include <iostream>
using namespace std;
int main() {
int i,n;
cout<<"Enter total number of elements:"<<"\n";
cin>>n;
int *a = new int(n);
cout<<"Enter "<<n<<" elements"<<endl;
for(i = 0;i<n;i++) {
cin>>a[i];
}
cout<<"Entered elements are: ";
for(i = 0;i<n;i++) {
cout<<a[i]<<" ";
}
cout<<endl;
delete (a);
return 0;
}

1. Jelaskan apa keluaran dari program tersebut
Enter the total number of elements:
3
Enter 3 elements 
2
3
5
Entered elements are: 2 3 5

2. Apa perbedaan array dinamis dengan statis ?

Array Statis:

Ukuran array dideklarasikan pada saat kompilasi dan tetap konstan selama program berjalan.
Jumlah elemen pada array statis harus diketahui saat kompilasi.
Memiliki alokasi memori statis yang dilakukan pada saat kompilasi, sehingga tidak memerlukan alokasi memori pada saat runtime.
Tidak memerlukan penggunaan operator new atau delete untuk alokasi dan dealokasi memori.
Tidak dapat diubah ukurannya pada saat runtime.
Array Dinamis:

Ukuran array dapat diubah pada saat runtime.
Jumlah elemen pada array dinamis dapat ditentukan saat runtime.
Memiliki alokasi memori dinamis yang dilakukan pada saat runtime, sehingga memerlukan penggunaan operator new atau malloc untuk alokasi memori dan operator delete atau free untuk dealokasi memori.
Dapat mengakibatkan fragmentasi memori jika alokasi dan dealokasi memori dilakukan secara tidak efisien.
Dapat menyebabkan masalah seperti memory leak atau dangling pointer jika tidak dikelola dengan baik.
Memiliki fleksibilitas dalam penggunaan ukuran array dan alokasi memori yang dibutuhkan selama program berjalan.


---------------------------------------------------------------------------------------------
Program di bawah ini adalah program yang memanfaatkan pointer. Salin, compile, dan eksekusi
program di berikut ini.
#include <iostream>
using namespace std;
#define N 10
// Dynamically allocate memory for 1D Array in C++
int main()
{
// dynamically allocate memory of size `N`



int* A = new int[N];
// assign values to the allocated memory
for (int i = 0; i < N; i++) {
A[i] = i + 1;
}
// print the 1D array
for (int i = 0; i < N; i++) {
std::cout << A[i] << " "; // or *(A + i)
}
// deallocate memory
delete[] A;
return 0;
}
}
- Jelaskan keluaran program di atas ?
1 2 3 4 5 6 7 8 9 10
- Apa bedanya dengan array statis ?
Array statis mengharuskan kita untuk menyatakan atau mendeklarasikan langsung ukuran array
----------------------------------------------------------------------------------------------
1) Perhatikan program di bawah ini, kemudian salin (ketik ulang, jangan copy-paste), compile, dan
eksekusi program tersebut. Jika terdapat syntax error atau error karena kesalahan dalam hal
penggunaan tipe data, operator, ataupun kesalahan logika, perbaiki hingga dapat dikompilasi dan
dijalankan sehingga menghasilkan luaran seperti yang diharapkan.
#include <iostream>
using namespace std;
int main()
{
int arr[10];
int i;
int sum=0, avg=0;
cout<<"Masukkan 10 Elemen Array bertipe integer";
for(i=0; i<10; i++)
{
cin>>arr[i];
sum = sum + arr[i];
}
cout<<"\nElemen Array adalah : \n";
for(i=0; i<10; i++)
{
cout<<arr[i]<<" ";
}
cout<<"\n\nHasil penjumlahan dari semua elemen array adalah : "<<sum;
avg = sum/10;
cout<<"\nRerata elemen array adalah : "<<avg;
return 0;
}

#include <iostream>
using namespace std;
int main()
{
int arr[10];
int i;
int sum=0, avg=0;
cout<<"Masukkan 10 Elemen Array bertipe integer : \n";
for(i=0; i<10; i++)
{
cin>>arr[i];
sum = sum + arr[i];
}
cout<<"\nElemen Array adalah : \n";
for(i=0; i<10; i++)
{
cout<<arr[i]<<" ";
}
cout<<"\n\nHasil penjumlahan dari semua elemen array adalah : "<<sum;
avg = sum/10;
cout<<"\nRerata elemen array adalah : "<<avg;
return 0;
}

2) Perhatikan program di bawah ini, kemudian salin (ketik ulang, jangan copy-paste), compile, dan
eksekusi program tersebut. Jika terdapat syntax error atau error karena kesalahan dalam hal
penggunaan tipe data, operator, ataupun kesalahan logika, perbaiki hingga dapat dikompilasi dan
dijalankan sehingga menghasilkan luaran seperti yang diharapkan.
#include <iostream>
using namespace std;
const int size=3;
struct employee {
string name;
int emp_no;
float salary;
} ;
int main () {
emp[size];
cout<<"Masukkan Data Pegawai"<<endl;
for(i=0;i<size;i++) {
cout<<" Pegawai Nomor "<<i+1<<endl;
cout<<" Nama:"<<endl;
cin>>emp[i].name;
cout<<" Kode: "<<endl;
cin>>emp[i].emp_no; //accessing members
cout<<" Gaji:"<<endl;
cin>>emp[i].salary;
}
cout<<"\n";
cout<<"Data Pegawai\n";
cout<<"No.\tNama\tKode\tGaji\n";
for(i=0;i<size;i++) {
cout<<i+1<<"\t"<<emp[i].name<<"\t"<<emp[i].emp_no<<"\t\t"<<emp[i].salary<
<"\n";
}
}

#include <iostream>
using namespace std;
const int size=3;
struct employee {
string name;
int emp_no;
float salary;
} ;
int main () {
employee emp[size];
cout<<"Masukkan Data Pegawai"<<endl;
for(int i=0;i<size;i++) {
cout<<" Pegawai Nomor "<<i+1<<endl;
cout<<" Nama:"<<endl;
cin>>emp[i].name;
cout<<" Kode: "<<endl;
cin>>emp[i].emp_no; //accessing members
cout<<" Gaji:"<<endl;
cin>>emp[i].salary;
}
cout<<"\n";
cout<<"Data Pegawai\n";
cout<<"No.\tNama\tKode\tGaji\n";
for(int i=0;i<size;i++) {
cout<<i+1<<"\t"<<emp[i].name<<"\t"<<emp[i].emp_no<<"\t\t"<<emp[i].salary<<"\n";
}
}

3) Apakah keluaran dari program di bawah ini, jelaskan!
#include <iostream>
using namespace std;
typedef int* IntPtr;
int main( )
{
IntPtr p;
int a[10];
int index;
for (index = 0; index < 10; index++)
a[index] = index;
p = a;


for (index = 0; index < 10; index++)
cout << p[index] << " ";
cout << endl;
for (index = 0; index < 10; index++)
p[index] = p[index] + 1;
for (index = 0; index < 10; index++)
cout << a[index] << " ";
cout << endl;
return 0;
}

0 1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9 10

output barus pertama berasal dari pointer yang diloop untuk mengeluarkan isi data  telah dinyatakan di loop for sebelumnya
pada output baris ke2, ada angka 1-10 karena ada loop for yang menambahkan 1 pada setiap elemen pada array

------------------------------------------------------------------------------------
1. Berikut adalah program untuk apa ? Jelaskan. Modifikasilah untuk masukan atau input array yang bisa
diisikan oleh user secara interaktif..

#include<iostream>
using namespace std;
int main ()
{
int myarray[5] = {12,4,3,1,15};
cout<<"\nInput list is \n";
for(int i=0;i<5;i++)
{
cout <<myarray[i]<<"\t";
}
for(int k=1; k<5; k++)
{
int temp = myarray[k];
int j= k-1;
while(j>=0 && temp <= myarray[j])
{
myarray[j+1] = myarray[j];
j = j-1;
}
myarray[j+1] = temp;
}
cout<<"\nOutput list is \n";
for(int i=0;i<5;i++)
{
cout <<myarray[i]<<"\t";
}
}

#include<iostream>
using namespace std;
int main ()
{
int myarray[5];
cout << "Enter 5 elements : "; 
for(int i=0;i<5;i++){
    cin >> myarray[i];
}
cout<<"\nInput list is \n";
for(int i=0;i<5;i++)
{
cout <<myarray[i]<<"\t";
}
for(int k=1; k<5; k++)
{
int temp = myarray[k];
int j= k-1;
while(j>=0 && temp <= myarray[j])
{
myarray[j+1] = myarray[j];
j = j-1;
}
myarray[j+1] = temp;
}
cout<<"\nOutput list is \n";
for(int i=0;i<5;i++)
{
cout <<myarray[i]<<"\t";
}
}


2. Berikut adalah program untuk mengisi dan menampilkan array structure data student, juga
menampilkan data umur yang tertua. Jika akan ditambahkan untuk menampilkan nama student yang
memiliki umur tertua tersebut, bagaimana caranya ? Modifikasi program tersebut supaya dapat
menampilkan hal tersebut dengan benar.

Modul Praktikum Pemrograman Dasar

14

#include<iostream>
using namespace std;
// struct declaration outside main()
struct
{
int roll,age;
string name;
}vr[4];
int main()
{
int i,j,k, max;
for(i=0; i<4; i++)
{
cout<<"Enter "<<i+1<<" Student Record\n";
cout<<"Enter Roll no: "<<endl;
cin>>vr[i].roll;
cout<<"Enter age : "<<endl;
cin>>vr[i].age;
cout<<"Enter Name : "<<endl;
cin>>vr[i].name;
}
cout<<endl;
for(j=0; j<4; j++)
{
cout<<"\nDisplay "<<j+1<<" Student Record";
cout<<"\nRoll no.: "<<vr[j].roll;
cout<<"\nAge : "<<vr[j].age;
cout<<"\nName : "<<vr[j].name<<endl;
}
max = vr[0].age;
for (k = 1; k < 4; k++)
{
if (max<vr[k].age)
max=vr[k].age;
}
cout << "\nThe oldest age's student is : " <<max;
return 0;
}

udh bener

3. Berikut adalah program penghitung jumlah dan rerata dari 3 buah masukan bilangan bertipe double.
Program mengimplementasikan suatu program modular yang terdiri dari 2 fungsi user definition
function, yaitu fungsi add dan avg. Modifikasilah program tersebut sehingga masukkannya menjadi
array bertipe double.

#include<iostream>
using namespace std;
// declare functions
double add(double num1, double num2, double num3);



double avg(double sum, int n);
// main function
int main()
{
// declare variables
double num1, num2, num3;
double sum, average;
// take input from end-user
cout << "Enter three Numbers :: ";
cin >> num1 >> num2 >> num3;
// calculate sum value
sum = add(num1 , num2, num3);
// calculate average value
average = avg(sum, 3);
// display result
cout << "Sum = " << sum << endl;
cout << "Average = " << average << endl;
return 0;
}
// function to add three numbers
double add(double num1, double num2, double num3)
{
return num1+num2+num3;
}
// function to calculate average of n number
double avg(double sum, int n)
{
return sum / n;
}


4. Berikut adalah program penghitung jumlah dan rerata dari 3 buah masukan bilangan bertipe double.
Program mengimplementasikan suatu program modular yang terdiri dari 2 user defined function,
yaitu fungsi add dan avg. Modifikasilah program tersebut sehingga masukkannya menjadi array
bertipe double.

#include<iostream>
using namespace std;
// declare functions
double add(double num1, double num2, double num3);
double avg(double sum, int n);
// main function
int main()
{

Modul Praktikum Pemrograman Dasar

16

// declare variables
double num1, num2, num3;
double sum, average;
// take input from end-user
cout << "Enter three Numbers :: ";
cin >> num1 >> num2 >> num3;
// calculate sum value
sum = add(num1 , num2, num3);
// calculate average value
average = avg(sum, 3);
// display result
cout << "Sum = " << sum << endl;
cout << "Average = " << average << endl;
return 0;
}
// function to add three numbers
double add(double num1, double num2, double num3)
{
return num1+num2+num3;
}
// function to calculate average of n number
double avg(double sum, int n)
{
return sum / n;
}

#include<iostream>
using namespace std;
// declare functions
double add(double arr[], int n);



double avg(double sum, int n);
// main function
int main()
{
// declare variables
double arr[3];
double sum, average;
// take input from end-user
cout << "Enter three Numbers :: ";
for (int i = 0; i < 3; i++) {
    cin >> arr[i];
}
// calculate sum value
sum = add(arr, 3);
// calculate average value
average = avg(sum, 3);
// display result
cout << "Sum = " << sum << endl;
cout << "Average = " << average << endl;
return 0;
}
// function to add three numbers
double add(double arr[], int n)
{
    double sum = 0;
    for (int i = 0; i < n; i++) {
        sum += arr[i];
    }
    return sum;
}
// function to calculate average of n number
double avg(double sum, int n)
{
return sum / n;
}

5. Buatlah program dengan menggunakan prinsip array dua dimensi, untuk menampilkan matriks
diagonal dan matriks segitiga bawah yang isinya huruf “X” saja 

#include <iostream>
using namespace std;

const int N = 5;

int main() {
    char matriks[N][N];
    
    // Mengisi matriks diagonal dan segitiga bawah dengan huruf 'X'
    for(int i=0; i<N; i++) {
        for(int j=0; j<N; j++) {
            if(i==j) {
                matriks[i][j] = 'X';  // diagonal
            } else if(i>j) {
                matriks[i][j] = ' ';  // segitiga bawah
            } else {
                matriks[i][j] = ' ';  // elemen lainnya
            }
        }
    }
    
    // Menampilkan matriks diagonal
    cout << "Matriks diagonal: " << endl;
    for(int i=0; i<N; i++) {
        for(int j=0; j<N; j++) {
            cout << matriks[i][j] << " ";
        }
        cout << endl;
    }
    
    // Mengisi matriks diagonal dan segitiga bawah dengan huruf 'X'
    for(int i=0; i<N; i++) {
        for(int j=0; j<N; j++) {
            if(i==j) {
                matriks[i][j] = 'X';  // diagonal
            } else if(i>j) {
                matriks[i][j] = 'X';  // segitiga bawah
            } else {
                matriks[i][j] = ' ';  // elemen lainnya
            }
        }
    }
    
    // Menampilkan matriks segitiga bawah
    cout << "Matriks segitiga bawah: " << endl;
    for(int i=0; i<N; i++) {
        for(int j=0; j<=i; j++) {
            cout << matriks[i][j] << " ";
        }
        cout << endl;
    }
    
    return 0;
}
-----------------------------------------------------------------------------------------------
1. Jelaskan maksud dan keluaran program di bawah. Bagaimana cara menyempurnakan program
supaya ketika masukan pada penggalan program ini tidak ditemukan, maka tidak terjadi error ?
cout<<"Accessing element at index. Enter the index : "; cin>>l;
Modifikasilah menjadi program modular dengan 3 user defined function. Masing-masing fungsi
digunakan untuk memecah tugas yang ada diprogram aslinya. Tetap gunakan tipe data array seperti
pada program aslinya.

#include<iostream>
using namespace std;
int main()
{



int n,k,l,ans=-1;
cout<<"Enter size of array"<<endl;
cin>>n;
int arr[n];
cout<<"Enter elements of array"<<endl;
for(int i=0;i<n;i++)
{
cin>>arr[i];
}
cout<<"Accessing element at index. Enter the index : ";
cin>>l;
cout<<endl;
cout<<"\nElement present at index "<<l<<" is "<<arr[l]<<endl;
cout<<"Enter element to be searched : "<<endl;
cin>>k;
for(int i=0;i<n;i++)
{
if(arr[i]==k)
{
ans=i;
break;
}
}
if(ans!=-1)
cout<<"The element "<<k<<" is present at index "<<ans;
else
cout<<"The element "<<k<<" is not there in the array";
return 0;
}

#include<iostream>
using namespace std;

// fungsi untuk meminta input array dari user
void getInput(int arr[], int n) {
    cout << "Enter elements of array" << endl;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
}

// fungsi untuk mencari elemen pada index tertentu
void findElement(int arr[], int n) {
    int l;
    cout << "Accessing element at index. Enter the index: ";
    cin >> l;
    cout << "\nElement present at index " << l << " is " << arr[l] << endl;
}

// fungsi untuk mencari elemen tertentu dalam array
void searchElement(int arr[], int n) {
    int k, ans = -1;
    cout << "Enter element to be searched: ";
    cin >> k;
    for (int i = 0; i < n; i++) {
        if (arr[i] == k) {
            ans = i;
            break;
        }
    }
    if (ans != -1)
        cout << "The element " << k << " is present at index " << ans;
    else
        cout << "The element " << k << " is not there in the array";
}

int main() {
    int n;
    cout << "Enter size of array" << endl;
    cin >> n;
    int arr[n];
    getInput(arr, n);
    findElement(arr, n);
    searchElement(arr, n);
    return 0;
}


2. Modifikasi program di bawah menjadi program modular yang memiliki 2 3 user defined function.
Fungsi yang pertama untum meng-inputkan array satu dimensi, sedangkan fungsi yang kedua untuk
mengeluarkan output seperti pada program aslinya.
#include<iostream>
using namespace std;
int main ()
{
int myarray[5] = {12,4,3,1,15};
cout<<"\nInput list is \n";
for(int i=0;i<5;i++)
{
cout <<myarray[i]<<"\t";
}
for(int k=1; k<5; k++)
{
int temp = myarray[k];
int j= k-1;
while(j>=0 && temp <= myarray[j])
{
myarray[j+1] = myarray[j];
j = j-1;
}
myarray[j+1] = temp;
}
cout<<"\nOutput list is \n";

for(int i=0;i<5;i++)
{
cout <<myarray[i]<<"\t";
}
}

#include<iostream>
using namespace std;

void inputArray(int arr[], int size) {
    cout << "Enter elements of array:" << endl;
    for(int i = 0; i < size; i++) {
        cin >> arr[i];
    }
}

void insertionSort(int arr[], int size) {
    cout << "\nInput list is:" << endl;
    for(int i = 0; i < size; i++) {
        cout << arr[i] << "\t";
    }
    for(int k = 1; k < size; k++) {
        int temp = arr[k];
        int j = k - 1;
        while(j >= 0 && temp <= arr[j]) {
            arr[j+1] = arr[j];
            j = j - 1;
        }
        arr[j+1] = temp;
    }
    cout << "\nOutput list is:" << endl;
    for(int i = 0; i < size; i++) {
        cout << arr[i] << "\t";
    }
}

int main() {
    int size = 5;
    int arr[size] = {12, 4, 3, 1, 15};
    inputArray(arr, size);
    insertionSort(arr, size);
    return 0;
}

3. Buatlah program untuk menampilkan elemen suatu matriks (array dua dimensi bertipe integer) dan
juga untuk mencari dan menampilkan nilai terkecil dari matriks tersebut. Tampilkan juga nilai terkecil
tersebut terletak pada indeks berapa ?

#include <iostream>
using namespace std;

// fungsi untuk mencari nilai terkecil pada matriks
void cariNilaiTerkecil(int matriks[][3], int baris, int kolom)
{
    int nilaiTerkecil = matriks[0][0];
    int indeksBaris = 0, indeksKolom = 0;
    for (int i = 0; i < baris; i++)
    {
        for (int j = 0; j < kolom; j++)
        {
            if (matriks[i][j] < nilaiTerkecil)
            {
                nilaiTerkecil = matriks[i][j];
                indeksBaris = i;
                indeksKolom = j;
            }
        }
    }
    cout << "Nilai terkecil pada matriks adalah " << nilaiTerkecil << endl;
    cout << "Terletak pada indeks baris " << indeksBaris << " dan kolom " << indeksKolom << endl;
}

int main()
{
    int matriks[3][3] = {{1, 2, 3},
                         {4, 5, 6},
                         {7, 8, 9}};
    int baris = 3, kolom = 3;
    // menampilkan elemen matriks
    cout << "Elemen matriks: " << endl;
    for (int i = 0; i < baris; i++)
    {
        for (int j = 0; j < kolom; j++)
        {
            cout << matriks[i][j] << " ";
        }
        cout << endl;
    }
    cariNilaiTerkecil(matriks, baris, kolom);
    return 0;
}


4. Apakah keluaran program di bawah ini ? Program ini menggunakan jenis tipe data apa ? Bagaimana
cara menambah beberapa data di program ini ?

#include <iostream>#include <iostream>
using namespace std;
struct Employee
{
string Name;
int Age;
};
int main()
{
Employee* DynArray;
DynArray = new (nothrow) Employee[3];
DynArray[0].Name = "Agus";
DynArray[0].Age = 33;
DynArray[1].Name = "Sigit";
DynArray[1].Age = 26;
DynArray[2].Name = "Sulis";
DynArray[2].Age = 52;
cout << "Displaying the Array Content" << endl;
for (int i = 0; i < 3; i++)
{
cout << "Name: " << DynArray[i].Name <<
"\tAge: " << DynArray[i].Age << endl;
}
delete[] DynArray;
return 0;
}


Keluaran program di bawah ini adalah:

makefile
Copy code
Displaying the Array Content
Name: Agus   Age: 33
Name: Sigit  Age: 26
Name: Sulis  Age: 52
Program ini menggunakan tipe data struct Employee dan dynamic memory allocation dengan operator new dan delete. Untuk menambahkan beberapa data, Anda dapat mengubah ukuran array dengan mengalokasikan memori dinamis baru dan menyalin data dari array yang lama ke array yang baru. Misalnya, untuk menambahkan dua karyawan lagi, Anda dapat melakukan hal berikut:

cpp
Copy code
Employee* NewDynArray;
NewDynArray = new (nothrow) Employee[5];
for (int i = 0; i < 3; i++)
{
    NewDynArray[i] = DynArray[i];
}
NewDynArray[3].Name = "Budi";
NewDynArray[3].Age = 45;
NewDynArray[4].Name = "Cahya";
NewDynArray[4].Age = 28;
delete[] DynArray;
DynArray = NewDynArray;
Catatan: Pastikan Anda selalu men-delete memori yang sudah dialokasikan secara dinamis saat sudah tidak diperlukan lagi.





User
apa maksud (nothrow) pada program tersebut

ChatGPT
Pada program tersebut, (nothrow) digunakan sebagai argumen pada operator new yang berfungsi untuk mengalokasikan memori dinamis. Ketika memori tidak cukup, biasanya operator new akan melemparkan exception (pengecualian) yang harus dihandle oleh program. Namun, dengan menggunakan (nothrow), operator new akan mengembalikan nilai null jika alokasi memori gagal, bukan melemparkan exception. Hal ini memberikan kontrol yang lebih baik terhadap program, sehingga program dapat melakukan penanganan kesalahan sendiri ketika alokasi memori gagal, tanpa harus mengandalkan penanganan exception.





----------------------------------------------------------------------------------------
